
def inference(a: number, b: string): number {
  return parseInt(b) + a
}

def inference2(c: number, d: number): number {
  return d + c
}

(1 + inference2()) || inference2()

def scoped() {
  return 1 + inference2()
  hello: number = 1
}

backLink = <p>1</p>
content: string = backLink.elm
// { page } = { attempt: 1 }

// page.attempt = page.attempt + 1

def match(path) {
  m = null
  params = {}
  route = {}
  for index, value in route: array {
    params := 1 + index
  }
}

test('Module inference', () => {
  // backLink + 1
  expect(inference(1, '2')).toBe(3)
  expect(inference2(1, 2)).toBe(3)
})
