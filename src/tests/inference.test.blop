
// def inference(a: number, b: string): number {
//   return parseInt(b) + a
// }

// def inference2(c: number, d: number): number {
//   return d + c
// }

// (1 + inference2()) || inference2()

// def scoped() {
//   return 1 + inference2()
//   hello = inference2()
// }

// backLink = <p>1</p>
// content: string = backLink.elm
page = { attempt: 1, success: 2 }
page.success / page.attempt
// page.attempt = page.attempt + 1

// def match(path) {
//   m = null
//   params = 9
//   route = {}
//   for index, value in route: array {
//     params := 1 + index
//   }
// }

// test('Module inference', () => {
//   // backLink + 1
//   expect(inference(1, '2')).toBe(3)
//   expect(inference2(1, 2)).toBe(3)
// })
