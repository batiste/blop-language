import { testImportedInference } from './lib.blop'

testImportedInference('a', 1)

def inference(a: number, b: string): number {
  return parseInt(b) + a
}

inference(1, '1')

def inference2(c: number, d: number): number {
  return d + c
}

(1 + inference2()) || inference2()

def scoped() {
  return 1 + inference2()
  hello: number = 1
  return hello
}

backLink = <p>1</p>
content: string = backLink.elm
page = { attempt: 1 }

page.attempt = page.attempt + 1

percent = 0
if (page.attempt) {
  percent := Math.floor(page.success / page.attempt)
}

def yop() {
  // d = ''
  return def () {
    // d + 1
  }
}

test('Module inference', () => {
  expect(inference(1, '2')).toBe(3)
  expect(inference2(1, 2)).toBe(3)
})
