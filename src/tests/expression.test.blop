
a = 10 % 3
b = 2 * 2 / 4
c = 10 - (1 + 2) + (2 + 4) + 2

def yop(n: number): function {
  return def (x: number): number {
    return n + 1 + x
  }
}

// if expression is in fact a function... is that useful?
x = if a == 2 {
  return 4
} else {
  return 3
}

e = if 1 {
  return { a: 10 }
}.a

{ h, j } = { h: 3, j: 10 }

async def test2() {
  ab = 1
  await 1
  return ab
}

ternary = if 2 => 1 else 2
ternary2 = if false => 10 + 10 else 20 + 20

guard = if true => 1000

selectTest = select 9 + 10 {
  18 {
    1
    2 + 1
  }
  19 {
    2 + 1
    5

  }
}

selectTest2 = select 9 + 20 {
  18 {
    1
    2 + 1
  }
  19 {
    2 + 1
    5
  }
}

def selectAndVirtualNode() {
  <p>
    select 1 {
      1 {
        <span>1</span>
      }
      2 {
        2
      }
    }
  </p>
}

test('expression', () => {
  expect(x).toBe(3)
  expect(c).toBe(15)
  expect(a).toBe(1)
  expect(b).toBe(1)
  expect(e).toBe(10)
  expect(h).toBe(3)
  expect(selectTest).toBe(5)
  expect(selectTest2).toBe(undefined)
  expect(ternary).toBe(1)
  expect(ternary2).toBe(40)
  expect(guard).toBe(1000)
  expect(typeof 3).toBe('number')
  expect(yop(1)(10)).toBe(12)
})