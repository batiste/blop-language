
a = 10 % 3
b = 2 * 2 / 4
c = 10 - (1 + 2) + (2 + 4) + 2

def yop(n: number): function {
  return def (x: number): number {
    return n + 1 + x
  }
}

{ h, j } = { h: 3, j: 10 }

async def test2() {
  ab = 1
  await 1
  return ab
}

ternary = if 2 => 1 else 2
ternary2 = if false => 10 + 10 else 20 + 20

guard = if true => 1000

d = 10
d += 20

e = { test: 1 }

e.test += 2

test('expression', () => {
  expect(c).toBe(15)
  expect(a).toBe(1)
  expect(b).toBe(1)
  expect(h).toBe(3)
  expect(d).toBe(30)
  expect(e.test).toBe(3)
  expect(ternary).toBe(1)
  expect(ternary2).toBe(40)
  expect(guard).toBe(1000)
  expect(typeof 3).toBe('number')
  expect(yop(1)(10)).toBe(12)
})