
import { h, mount } from './runtime.blop'
import { TodoListItem, Button } from './TodoListItem.blop'

state = {
  todoList: ['some task 1', 'some task 2'],
  dog: null
}

fetch(`https://dog.ceo/api/breeds/image/random`).then(async (response) => {
  state.dog = (await response.json()).message
})

Input = (attrs) => <input
  type="text"
  value=attrs.value
  on=attrs.on
  style={fontSize: '16px', padding: '0.5em'} />

Title = (attrs, children) => {
  <h1 style={fontSize: ''attrs.size || 18'px'}>children</h1>
}

TodoList = (state) => {
  addItem = (e) => {
    e.preventDefault()
    if state.inputValue {
      state.todoList.push(state.inputValue)
      state.inputValue = ''
    }
  }
  editItem = (e, index) => {
    state.editItemIndex = index
  }
  changeItem = (e, index) => {
    state.editItemIndex = false
    state.todoList[index] = e.target.value
  }
  onChange = (e) => {
    state.inputValue = e.target.value
  }
  remove = (e, index) => {
    state.editItemIndex = false
    state.todoList.splice(index, 1)
  }

  <div>
    <Title size=24>`Todo list`</Title>
    <form on={submit: addItem}>
      <Input value=state.inputValue on={change: onChange} />
      <Button on={click: addItem} size=28>"Add to list"</Button>
    </form>
    <ul style={maxWidth: '20em'}>
    for index, value in state.todoList {
      <TodoListItem
        removeItem=(e) => remove(e, index)
        editItem=(e) => editItem(e, index)
        changeItem=(e) => changeItem(e, index)
        editMode=state.editItemIndex == index
        value=value />
    }
    </ul>
    if state.dog {
      <a href=state.dog>
        <img src=state.dog />
      </a>
    }
  </div>
}

def binded() {
  return TodoList(state)
}

mount(document.body, binded)
