
import { TodoListItem } from './TodoListItem.blop'
import { DogChooser } from './DogChooser.blop'
import { router } from './routing.blop'
import { Component } from 'blop'


Input = (state) => <input
  type="text"
  value=state.value
  className="form-control"
  on=state.on
  style={ fontSize: '16px', padding: '0.5em' } />

Button = (state, children) => {
  <button
    type="button" className="btn btn-primary"
    on=state.on>children</button>
}

TodoList = (state) => {
  { todo } = state

  addItem = (e) => {
    e.preventDefault()
    if todo.inputValue {
      todo.todoList.push(todo.inputValue)
      todo.inputValue = ''
    }
  }
  editItem = (e, index) => {
    todo.editItemIndex = index
  }
  changeItem = (e, index) => {
    todo.editItemIndex = false
    todo.todoList[index] = e.target.value
  }
  change = (e) => {
    todo.inputValue = e.target.value
  }
  remove = (e, index) => {
    todo.editItemIndex = false
    todo.todoList.splice(index, 1)
  }

  <div>
    <h3>`Todo list`</h3>
    <form on={ submit: addItem }>
      <div className="form-row">
        <div className="col">
          <Input value=todo.inputValue on={ change } />
        </div>
        <div className="col">
          <button
            type="button" className="btn btn-primary"
            on={ click: addItem }>"Add to list"</button>
        </div>
      </div>
    </form>
    // needRender attribute is an optimization offered to avoid useless rendering and patching
    needRender = todo.todoList.hasChanged() || todo.hasChanged('.editItemIndex')
    <ul needRender>
      // if needRender === false, this part of the code will not be executed
      for index, value in todo.todoList {
        <TodoListItem
          removeItem=(e) => remove(e, index)
          editItem=(e) => editItem(e, index)
          changeItem=(e) => changeItem(e, index)
          editMode=todo.editItemIndex == index
          value />
      }
    </ul>
  </div>
}
