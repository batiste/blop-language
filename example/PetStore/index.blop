import { deletePets } from './services.blop'

pageSize = 10

def pagination(petStore) {
  pets = petStore.pets
  pageIndex = petStore.pageIndex
  nbPage = Math.ceil(pets.length / pageSize)
  nextPage = (e) => {
    e.preventDefault()
    petStore.pageIndex = pageIndex + 1
  }
  previousPage = (e) => {
    e.preventDefault()
    petStore.pageIndex = pageIndex - 1
  }
  <p>
    if pageIndex > 0 {
      <a href='#' class="btn btn-secondary previous" on={ click: previousPage }>'< Previous page'</a>
      = ' '
    }
    = 'Page 'pageIndex + 1' on 'nbPage' '
    if pageIndex < pets.length {
      <a href='#' class="btn btn-secondary next" on={ click: nextPage }>'Next page >'</a>
    }
  </p>
}

def PetStore(attributes) {
  { petStore } = attributes.state
  pets = petStore.pets
  pageIndex = petStore.pageIndex
  start = pageIndex * pageSize
  page = petStore.pets.slice(start, (pageIndex + 1) * pageSize)
  nbPage = Math.ceil(pets.length / pageSize)

  deletePet = (index, pet) => (e) => {
    deletePets(pet)
    pets.splice(start + index, 1)
  }
  <div>
    <style>'
      .previous {
        margin-right: 10px;
      }
      .next {
        margin-left: 10px;
      }
    '</style>
    <p>
      = 'Using the slow and buggy swagger pet API is a good test. Rendering 'pets.length' pets from '
      <a href='https://petstore.swagger.io/'>'petstore.swagger.io'</a>
    </p>
    if petStore.pets.length {
      = pagination(petStore)
      for key, pet in page: array {
        // the key can help with the patching speed
        <p key>
          <span style={ 'min-width': '300px', 'display': 'inline-block' }>pet.name</span>
          if pet.photoUrls {
            for src in pet.photoUrls {
              if src.startsWith('http') {
                <img src style={ width: '200px' } />
              }
            }
          }
          = ' '
          <button class="btn btn-secondary" on={ click: deletePet(key, pet) }>'Delete'</button>
        </p>
      }
      = pagination(petStore)
    } else {
      <div class="spinner-border text-primary" role="status">
        <span class="sr-only">'Loading...'</span>
      </div>
    }
  </div>
}
