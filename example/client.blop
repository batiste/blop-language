import { mount } from 'blop'
import { createState } from './state.blop'
import { createRouter } from './routing.blop'
import { Index } from './index.blop'

proxiedState = createState(window.INITIAL_STATE)
router = createRouter(proxiedState, window)

render = () => {
  if !proxiedState.hasChanged() {
    return
  }
  tree = Index(proxiedState)
  proxiedState.$.flush()
  console.log('Client renderer executed')
  return tree
}

// boot up the app on the client
{ refresh, init } = mount(document.getElementById('app'), render)
init()

proxiedState.$.listen((path) => {
  refresh((time) => {
    if time > 50 {
      console.log(`Slow rendering time `time`ms triggered by `path``)
    }
  })
})