import { Router } from './lib/router.blop'
import { default as fetch } from 'node-fetch'

async def getNewDog(state) {
  state.loading = true
  try {
    response = await fetch(`https://dog.ceo/api/breeds/image/random`)
  } catch e {
    console.log(e)
    state.loading = e.message
    return
  }
  message = (await response.json()).message
  bits = message.split('/')
  state.loading = false
  state.dog = { url: message, breed: bits[4], image: bits[5] }
}

def doggyHanlder(params, state) {
  console.log('doggyHanlder called with', params)
  state.dog = { breed: params.breed, image: params.image }
  state.choosenDoggy = 'My dog is a 'params.breed''
}

async def indexHandler(params, state) {
  console.log('indexHandler called')
  await getNewDog(state)
}

def createRouter(state, global) {
  router = new Router(null, state, global)

  router.add({ path: '/dogs/:breed/:image', name: 'doggy', handler: doggyHanlder })
  router.add({ path: '/', name: 'root', handler: indexHandler })

  router.init()
  return router
}