
import { TodoListItem } from './TodoListItem.blop'

AutoFocusInput = (state) => {
  hooks = { insert: (vnode) => vnode.elm.focus() }
  <input
    hooks
    type="text"
    value=state.value
    class="form-control"
    on=state.on
    autofocus=true
    style={ fontSize: '16px', padding: '0.5em' } />
}

TodoListPage = (attributes, _children, node) => {
  { todo } = attributes

  def unselect() {
    if todo.editItemIndex != false {
      todo.editItemIndex = false
    }
  }

  node.mount(() => {
    console.log('mount TodoListPage')
    document.addEventListener('click', unselect)
  }).unmount(() => {
    console.log('unmount TodoListPage')
    document.removeEventListener('click', unselect)
  })

  addItem = (e) => {
    e.preventDefault()
    if todo.inputValue {
      todo.todoList.push(todo.inputValue)
      todo.inputValue = ''
    }
  }
  change = (e) => {
    todo.inputValue = e.target.value
  }

  editItem = (index: number) => (e) => {
    e.stopPropagation()
    todo.editItemIndex = index
  }
  changeItem = (index: number) => (e) => {
    todo.editItemIndex = false
    todo.todoList[index] = e.target.value
  }
  remove = (index: number) => () => {
    todo.editItemIndex = false
    todo.todoList.splice(index, 1)
  }
  <div>
    <form on={ submit: addItem }>
      <div class="form-row">
        <div class="col">
          <AutoFocusInput value=todo.inputValue on={ change } />
        </div>
        <div class="col">
          <button
            type="button" class="btn btn-primary"
            on={ click: addItem }>"Add to list"</button>
        </div>
      </div>
    </form>
    <ul>
      for index, value in todo.todoList {
        <TodoListItem
          removeItem=remove(index)
          editItem=editItem(index)
          changeItem=changeItem(index)
          editMode=todo.editItemIndex == index
          todo
          value />
      }
    </ul>
  </div>
}
