import 'express'
import { Index } from './index.blop'
import { createState } from './state.blop'
import { createRouter } from './routing.blop'
import 'webpack'
import 'webpack-dev-middleware' as middleware
import 'snabbdom-to-html' as toHTML
import 'path'
import '../webpack.config.js' as webpackConf

app = express()
// we only rebuild the client config
clientConfig = webpackConf[1]
compiler = webpack(clientConfig)

render = async (path) => {
  state = createState()
  router = createRouter(state)
  await router.go(path)
  tree = Index(state)
  console.log('Server render executed for 'path'')
  return tree
}

app.use(middleware(compiler, {
  publicPath: '/bundle'
}))

app.get('/favicon.ico', (req, res) => {
  res.sendFile(path.resolve('./img/blop.png'))
})

app.use(async (req, res) => {
  html = toHTML(await render(req.path))
  res.send(`
    <html>
      <head>
        <title>Blop language example</title>
        <link rel="stylesheet" 
          href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css"
          integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO"
          crossorigin="anonymous">
      </head>
      <body>
        `html`
      </body>
      <script src="/bundle/client.js"></script>
    </html>
  `)
})

app.listen(3000, () => {
  GREEN = '\x1b[32m'
  NC = '\x1B[0m'
  console.log(''GREEN'[server]'NC' Running on http://localhost:3000')
})
